MITE Batch 2

1. Find the minimum value in array:
required data : array
required operation: min element


2. Find the least missing element in array:
eg:
9,5,23,6,24,78,12
output: 


finding first min, second min	>> O(n)>> loop



secondmin-firstmin	>> different
	6	-	5	>> 1
secondMin+1 - different
	7	- 1	>> 6>> 


3. A chocolate factory is packing chocolates into packets. The chocolate packets here represent an array arr of N number of integer values. The task is to find the empty packets(0) of chocolate and push it to the end of the conveyor belt(array).
Input:
N = 8
arr = [1, 0, 2, 3, 0, 4, 5, 0]
Output:
[1, 2, 3, 4, 5, 0, 0, 0]



Greedy
Divide and Conquer
Dynamic Programming


Day 2:
Debits:




1. Binary Search: Divide and Conquer:

2. Consider the following array is account balance of last 7 transactions, find the period of time (subSum) where the max amount kept in the account.
(max sub array where sum is max)
eg:
Input:
2, -4, 1, 9, -6, 7, -3
output:
10

Input:
-2, 1, 3, -3, 4, -1, 2, 1, -5, 4
Output:
7

3. Equilibrium Index of account balance in that day you can see the balances of past and post are equals

int[] arr = {10, 20, 30, 10, 10, 10, 30, 20, 10, 10};
System.out.println(equilibriumIndex(arr)); // Output: Can't find Equilibrium day
int[] myStatement = {-7, 1, 5, 2, -4, 3, 0};
day is : 3


4. Find the number of debits in last transactions as array of following values
input:
[1200,300,19000,400,120,500]
Output:
3

5. You are given a string s consisting of n characters which are either 'X' or 'O'.
A move is defined as selecting three consecutive characters of s and converting them to 'O'. Note that if a move is applied to the character 'O', it will stay the same.
Return the minimum number of moves required so that all the characters of s are converted to 'O'.
Example 1:
Input: s = "XXX"
Output: 1
Explanation: XXX -> OOO
We select all the 3 characters and convert them in one move.
Example 2:
Input: s = "XXOX"
Output: 2
Explanation: XXOX -> OOOX -> OOOO
We select the first 3 characters in the first move, and convert them to 'O'.
Then we select the last 3 characters and convert them so that the final string contains all 'O's.
Example 3:
Input: s = "OOOO"
Output: 0
Explanation: There are no 'X's in s to convert.


6. Consider the array contains 10 employees annual salary, now you gonna update take home after income tax(old regime) deduction on each
eg:
[12.5,9.2,4.5,19.5,2.5,56.8]
10.6, 9.10, 4.47, 15.6, 2.5, 39.76
no tax upto 4
4-8>> 5, 8-12>> 10, 12-16>> 15, 16-20>>20, 20-24>>25, 24>> 30
eg: 12.5 - (12.5*0.15) or 12.5*15/100 - 12.5



Day 3:
1. Using recursion to find the sum of the array:
input:
-7, 1, 5, 2, -4, 3, 0
output:
0
input:
2.5,9.2,4.5,19.5,2.5,56.8
output:
95

2. Perform linear search using recursion:
input:
arr = 2.5,9.2,4.5,19.5,2.5,56.8
element: 19.5
Output: 3
Element: 2.5
Output: 0
Element: 2.1
Output:-1


3. You are a software engineer assigned to develop a fitness tracking app. One of the features of the app is to track the number of unique ways users can climb a staircase with n steps. Each user can take either 1 step, 2 steps at a time. Implement a function that calculates the number of unique ways to climb a staircase with n steps.
Input:  n=1
Output: 1
Input: n=2
Output: 2
Input: n=5
Output: 8


4. Merge Sort
5. Inversion Count 
You are working for an e-commerce company that deals with a large volume of customer orders. The company wants to optimize its warehouse operations by analyzing the efficiency of order processing.
The goal is to count the number of inversion pairs in the order processing times to identify potential inefficiencies. An inversion pair in this context is defined as a situation where a later order (in terms of processing sequence) took less time to process than an earlier order. By identifying these inversions, you can pinpoint areas where the warehouse team may need to improve their workflow or processes.
Input
An array P[] of n integers representing the processing times of orders, in the order they were processed.
Output
The count of inversion pairs in the array.

Example
Input:
P[] = [30, 45, 25, 60, 20]
Output:
The inversion count is 5
Explanation: There are 5 inversion pairs in the array:
(45, 25) where 45 > 25 and 2 < 3
(45, 20) where 45 > 20 and 2 < 5
(30, 25) where 30 > 25 and 1 < 3
(30, 20) where 30 > 20 and 1 < 5
(60, 20) where 60 > 20 and 4 < 5
Input:  A[] = [1, 9, 6, 4, 5]
Output: The inversion count is 5
There are 5 inversions in the array: (9, 6), (9, 4), (9, 5), (6, 4), (6, 5)

6. Validate the signing up process in the income tax e filing portal with customer details such as fullname, email, aadhaar, pan, username, password

7. A chatbot needs to analyze user messages. It must count the number of vowels and consonants in a given message to determine if the message is easy to read (more vowels) or complex (more consonants).
Example:
Input: "Hello AI"
Output: Vowels: 4, Consonants: 3












Pattern	Description
^		Start of string
$		End of string
.		Any single character
*		Zero or more occurrences
+		One or more occurrences
\d		Any digit
\w		Any word character
\s		Any whitespace














Lab:
1. Using recursion, 
As part of a financial data analysis tool, you are tasked with finding a group of four distinct numbers within an array that add up to a target sum T. Write a function that takes an array of integers and a target sum T as input and returns all unique quadruples [a, b, c, d] such that a + b + c + d = T.
eg:
Input: 2,7,4,0,9,5,1,3    and expected: 20
Output: Quadruple Found
input: 2, 7, 4, 0, 9, 5, 1, 3 and expected : 50
Output: Quadruple not Found

2. Using recursion
You are working on a vending machine software that dispenses change. Given an unlimited supply of currencies of different denominations (e.g., 100, 200, 500 etc.), you need to write a program to determine the minimum number of currencies required to make a given amount x. The program should accept the amount x and the list of denominations as input and output the minimum number of coins needed.
Input
coins = [100, 200, 500]  , amount = 1100
Output
3
amount = 8700
Output:
18

3. A customer support system logs multiple issues reported by users. The first unique word in the log is often the most critical issue. Given a message, find the first non-repeating character, which represents the first unique issue. If all characters repeat, return -1.
Example:
Input: "customer service issue"
Output: "c" (since 'c' appears first and does not repeat)
Input: "aabbcc"
Output: -1

4. A spy receives a secret message that is written backward. He needs your help to decode it. Write a function that takes the encoded message (a reversed string) and returns the original message.
Example:
Input: "sdrawkcab"
Output: "backwards"
